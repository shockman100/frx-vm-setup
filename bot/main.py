from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from modules.telegram_sender import send_telegram, read_secret
from ib_insync import IB, Forex, util
import asyncio


# IB csatlakoz√°s pr√≥b√°l√°sa
async def connect_ib():
    ib_host = read_secret("ib_host") or "127.0.0.1"
    ib_port = int(read_secret("ib_port") or 7497)
    ib_client_id = int(read_secret("ib_client_id") or 1)

    ib = IB()
    try:
        await ib.connectAsync(ib_host, ib_port, clientId=ib_client_id, timeout=5)
        return ib
    except Exception as e:
        print(f"‚ùå IB kapcsol√≥d√°si hiba: {e}")
        return None


# /status parancs kezel√©se
async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§ñ FRX bot fut √©s v√°laszol. Minden rendben.")


# /price parancs kezel√©se (pl. EUR.USD √°rfolyam)
async def price_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    ib = await connect_ib()
    if not ib:
        await update.message.reply_text("‚ö†Ô∏è IB Gateway nem el√©rhet≈ë.")
        return

    try:
        contract = Forex("EURUSD")
        ticker = ib.reqMktData(contract, "", False, False)
        await asyncio.sleep(2)
        price = ticker.marketPrice()
        if price:
            await update.message.reply_text(f"üí± EUR/USD: {price:.5f}")
        else:
            await update.message.reply_text("‚ö†Ô∏è Nem siker√ºlt lek√©rni az √°rfolyamot.")
    finally:
        ib.disconnect()


# Ismeretlen √ºzenet kezel√©se
async def unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§î Ismeretlen parancs. Pr√≥b√°ld: /status vagy /price")


def main():
    telegram_token = read_secret("telegram_bot_token")
    if not telegram_token:
        print("‚ùå Telegram token hi√°nyzik.")
        return

    send_telegram("ü§ñ FRX bot elindult. K√©szen √°ll a parancsokra.")

    app = ApplicationBuilder().token(telegram_token).build()
    app.add_handler(CommandHandler("status", status_command))
    app.add_handler(CommandHandler("price", price_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, unknown_message))
    app.add_handler(MessageHandler(filters.COMMAND, unknown_message))  # /ismeretlen

    print("üöÄ Bot fut √©s v√°rja a parancsokat...")
    app.run_polling()


if __name__ == "__main__":
    main()
